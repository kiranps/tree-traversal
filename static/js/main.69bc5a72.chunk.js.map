{"version":3,"sources":["constants.ts","Styled.tsx","helper.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["TREE_DATA","value","children","TreeBox","styled","div","withConfig","displayName","componentId","SelectionBox","Select","select","Option","option","TraversedList","Item","Button","button","Tree","svg","preOrderTraversal","node","arr","arguments","length","undefined","n","push","x","y","postOrderTraversal","inOrderTraversal","breadthFirstTraversal","queue","currentNode","shift","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","root","traversal","chart","nodes","state","traversing","tree","handleChange","e","target","resetNodes","d3","current","selectAll","attr","toggleTraversal","stopTraversal","startTraversal","clearTimeout","setState","animateTraversal","setTimeout","concat","toConsumableArray","filter","d","slice","treeLayout","size","React","createRef","append","data","links","enter","source","diagonal","descendants","text","_this$state","react_default","a","createElement","react","ref","onChange","onClick","map","i","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69bc5a72.chunk.js","sourcesContent":["const TREE_DATA = {\n  value: \"34\",\n  children: [\n    {\n      value: \"23\",\n      children: [\n        {\n          value: \"12\",\n          children: []\n        },\n        {\n          value: \"04\",\n          children: [\n            {\n              value: \"16\",\n              children: []\n            },\n            {\n              value: \"09\",\n              children: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      value: \"92\",\n      children: []\n    }\n  ]\n};\n\nexport { TREE_DATA };\n","import styled from \"styled-components/macro\";\n\nconst TreeBox = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 50%;\n  text-align: center;\n  padding-top: 14%;\n`;\n\nconst SelectionBox = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 50%;\n  background-color: #eee;\n  text-align: center;\n  padding-top: 20%;\n`;\n\nconst Select = styled.select`\n  width: 200px;\n  height: 40px;\n  text-align: center;\n  background-color: #fff;\n  outline: none;\n  margin: 10px auto;\n  padding: 5px 10px;\n  border: 1px solid #d6d6d6;\n  color: #5f5f5f;\n`;\n\nconst Option = styled.option`\n  color: #5f5f5f;\n`;\n\nconst TraversedList = styled.div`\n  margin-top: 10px;\n`;\n\nconst Item = styled.div`\n  display: inline-block;\n  height: 50px;\n  width: 50px;\n  border: 1px solid #d6d6d6;\n  margin-right: 5px;\n  background-color: #fff;\n  line-height: 48px;\n  border-radius: 2px;\n  font-size: 15px;\n  color: #5f5f5f;\n`;\n\nconst Button = styled.button`\n  margin-left: 10px;\n  border: 1px solid #d6d6d6;\n  color: #5f5f5f;\n  background-color: #fff;\n  border-radius: 3px;\n  height: 40px;\n  cursor: pointer;\n  outline: none;\n  min-width: 100px;\n  user-select: none;\n`;\n\nconst Tree = styled.svg`\n  width: 200px;\n  height: 260px;\n`;\n\nexport {\n  TreeBox,\n  Tree,\n  SelectionBox,\n  Select,\n  Option,\n  TraversedList,\n  Item,\n  Button\n};\n","interface Node {\n  x: Float32Array;\n  y: Float32Array;\n  value: number;\n  children: Node[];\n}\n\ninterface NodeArr {\n  x: Float32Array;\n  y: Float32Array;\n  value: number;\n}\n\nexport const preOrderTraversal = (\n  node: Node,\n  arr: NodeArr[] = []\n): NodeArr[] => {\n  if (node) {\n    const n = node.children || [];\n    arr.push({ x: node.x, y: node.y, value: node.value });\n    preOrderTraversal(n[0], arr);\n    preOrderTraversal(n[1], arr);\n  }\n  return arr;\n};\n\nexport const postOrderTraversal = (\n  node: Node,\n  arr: NodeArr[] = []\n): NodeArr[] => {\n  if (node) {\n    const n = node.children || [];\n    postOrderTraversal(n[0], arr);\n    postOrderTraversal(n[1], arr);\n    arr.push({ x: node.x, y: node.y, value: node.value });\n  }\n  return arr;\n};\n\nexport const inOrderTraversal = (\n  node: Node,\n  arr: NodeArr[] = []\n): NodeArr[] => {\n  if (node) {\n    const n = node.children || [];\n    inOrderTraversal(n[0], arr);\n    arr.push({ x: node.x, y: node.y, value: node.value });\n    inOrderTraversal(n[1], arr);\n  }\n  return arr;\n};\n\nexport const breadthFirstTraversal = (node: Node): NodeArr[] => {\n  let queue = [node];\n  const arr: NodeArr[] = [];\n\n  while (queue.length) {\n    let currentNode = queue.shift();\n\n    if (currentNode) {\n      const n = currentNode.children || [];\n      if (n[0]) {\n        queue.push(currentNode.children[0]);\n      }\n      if (n[1]) {\n        queue.push(currentNode.children[1]);\n      }\n      arr.push({\n        x: currentNode.x,\n        y: currentNode.y,\n        value: currentNode.value\n      });\n    }\n  }\n  return arr;\n};\n\nexport function diagonal(d: any) {\n  return (\n    \"M\" +\n    d.source.x +\n    \",\" +\n    d.source.y +\n    \"C\" +\n    (d.source.x + d.target.x) / 2 +\n    \",\" +\n    d.source.y +\n    \" \" +\n    (d.source.x + d.target.x) / 2 +\n    \",\" +\n    d.target.y +\n    \" \" +\n    d.target.x +\n    \",\" +\n    d.target.y\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport * as d3 from \"d3\";\nimport { TREE_DATA } from \"./constants\";\nimport {\n  TreeBox,\n  SelectionBox,\n  Select,\n  Option,\n  TraversedList,\n  Item,\n  Button,\n  Tree\n} from \"./Styled\";\n\nimport {\n  diagonal,\n  inOrderTraversal,\n  preOrderTraversal,\n  postOrderTraversal,\n  breadthFirstTraversal\n} from \"./helper\";\n\nclass App extends Component {\n  root: any;\n  traversal: any;\n  arr: any;\n  chart: any;\n  nodes: any;\n  constructor(props: any) {\n    super(props);\n    const treeLayout = d3.tree().size([320, 200]);\n    const root = d3.hierarchy(TREE_DATA);\n    treeLayout(root);\n    this.root = root;\n    this.arr = preOrderTraversal(this.root);\n    this.chart = React.createRef();\n  }\n\n  state = { traversing: false, tree: [] };\n\n  componentDidMount() {\n    const chart = d3\n      .select(this.chart.current)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(-70, 30)\");\n\n    chart\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(this.root.links())\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", (d: any) => diagonal(d))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-opacity\", 0.4)\n      .attr(\"stroke-width\", \"1.5px\");\n\n    const nodes = chart\n      .append(\"g\")\n      .selectAll(\"circle\")\n      .data(this.root.descendants())\n      .enter()\n      .append(\"g\");\n\n    // circle\n    nodes\n      .append(\"circle\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-opacity\", 0.6)\n      .attr(\"stroke-width\", \"3px\")\n      .attr(\"fill\", \"#fff\")\n      .attr(\"cx\", (d: any) => d.x)\n      .attr(\"cy\", (d: any) => d.y)\n      .attr(\"r\", 15);\n\n    // text\n    nodes\n      .append(\"text\")\n      .attr(\"dx\", (d: any) => d.x - 7)\n      .attr(\"dy\", (d: any) => d.y + 4)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#5f5f5f\")\n      .text((d: any) => d.value);\n  }\n\n  handleChange = (e: any) => {\n    let traversalType = e.target.value;\n\n    switch (traversalType) {\n      case \"preorder\":\n        this.arr = preOrderTraversal(this.root);\n        break;\n      case \"postorder\":\n        this.arr = postOrderTraversal(this.root);\n        break;\n      case \"inorder\":\n        this.arr = inOrderTraversal(this.root);\n        break;\n      case \"bft\":\n        this.arr = breadthFirstTraversal(this.root);\n        break;\n    }\n  };\n\n  resetNodes = () => {\n    d3.select(this.chart.current)\n      .selectAll(\"circle\")\n      .attr(\"fill\", \"#fff\")\n      .attr(\"stroke\", \"#555\");\n\n    d3.select(this.chart.current)\n      .selectAll(\"text\")\n      .attr(\"fill\", \"#5f5f5f\");\n  };\n\n  toggleTraversal = () => {\n    this.state.traversing ? this.stopTraversal() : this.startTraversal();\n  };\n\n  stopTraversal = () => {\n    clearTimeout(this.traversal);\n    this.resetNodes();\n    this.setState({ traversing: false, tree: [] });\n  };\n\n  startTraversal = () => {\n    this.resetNodes();\n    this.setState({ traversing: true, tree: [] });\n    this.animateTraversal(this.arr);\n  };\n\n  animateTraversal = (arr: any[]) => {\n    if (arr.length > 0) {\n      this.traversal = setTimeout(() => {\n        const x = arr[0];\n        this.setState({ tree: [...this.state.tree, x.value] });\n        d3.select(this.chart.current)\n          .selectAll(\"circle\")\n          .filter((d: any) => x.x === d.x && x.y === d.y)\n          .attr(\"fill\", \"#2196F3\")\n          .attr(\"stroke\", \"#2196F3\");\n\n        d3.select(this.chart.current)\n          .selectAll(\"text\")\n          .filter((d: any) => x.x === d.x && x.y === d.y)\n          .attr(\"fill\", \"#fff\");\n\n        this.animateTraversal(arr.slice(1));\n      }, 1000);\n    }\n  };\n\n  render() {\n    const { tree, traversing } = this.state;\n    return (\n      <Fragment>\n        <TreeBox>\n          <Tree ref={this.chart} />\n        </TreeBox>\n        <SelectionBox>\n          <Select onChange={this.handleChange}>\n            <Option value=\"preorder\">preorder</Option>\n            <Option value=\"postorder\">postorder</Option>\n            <Option value=\"inorder\">inorder</Option>\n            <Option value=\"bft\">bft</Option>\n          </Select>\n          <Button onClick={this.toggleTraversal}>\n            {traversing ? \"stop\" : \"start\"}\n          </Button>\n          <TraversedList>\n            {tree.map((x, i) => (\n              <Item key={i}>{x}</Item>\n            ))}\n          </TraversedList>\n        </SelectionBox>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}